<?xml version="1.0" encoding="utf-8"?>
<ewe:Workflow xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:ewe="clr-namespace:ExerciseTemplateBusinessRules.Workflows.EmailOnRfiCreated;assembly=ExerciseTemplateBusinessRules" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:msdad="clr-namespace:Microsoft.SharePoint.DesignTime.Activities.Design;assembly=Microsoft.SharePoint.DesignTime.Activities.Design" xmlns:p="wf://workflow.windows.net/$Activities" xmlns:p1="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.ServerRuntime</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>ExerciseTemplateBusinessRules</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <ewe:Workflow.Implementation>
    <Sequence DisplayName="Root">
      <Sequence.Variables>
        <Variable x:TypeArguments="p1:DynamicValue" Name="listItemProperties" />
        <Variable x:TypeArguments="x:String" Name="pocEmail" />
        <Variable x:TypeArguments="sco:Collection(x:String)" Name="emailRecipients" />
      </Sequence.Variables>
      <Sequence DisplayName="Extract POCEmail">
        <p:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}">
          <p:LookupSPListItem.ItemId>
            <InArgument x:TypeArguments="x:Int32">
              <p1:ExpressionContainerValue x:TypeArguments="x:Int32">
                <p:GetCurrentItemId />
              </p1:ExpressionContainerValue>
            </InArgument>
          </p:LookupSPListItem.ItemId>
          <p:LookupSPListItem.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <p1:ExpressionContainerValue x:TypeArguments="s:Guid">
                <p:GetCurrentListId />
              </p1:ExpressionContainerValue>
            </InArgument>
          </p:LookupSPListItem.ListId>
          <p:LookupSPListItem.Result>
            <OutArgument x:TypeArguments="p1:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p1:DynamicValue">listItemProperties</mca:CSharpReference>
            </OutArgument>
          </p:LookupSPListItem.Result>
        </p:LookupSPListItem>
        <p1:GetODataProperties DisplayName="GetDynamicValueProperties">
          <p1:GetODataProperties.Source>
            <InArgument x:TypeArguments="p1:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p1:DynamicValue">listItemProperties</mca:CSharpValue>
            </InArgument>
          </p1:GetODataProperties.Source>
          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
            <OutArgument x:TypeArguments="x:String" x:Key="POCEmail">
              <mca:CSharpReference x:TypeArguments="x:String">pocEmail</mca:CSharpReference>
            </OutArgument>
          </scg:Dictionary>
        </p1:GetODataProperties>
        <p:WriteToHistory>
          <p:WriteToHistory.Message>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"Email extracted from list item: " + pocEmail</mca:CSharpValue>
            </InArgument>
          </p:WriteToHistory.Message>
        </p:WriteToHistory>
      </Sequence>
      <Sequence DisplayName="Send Email">
        <p1:BuildCollection x:TypeArguments="x:String">
          <p1:BuildCollection.Result>
            <OutArgument x:TypeArguments="sco:Collection(x:String)">
              <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">emailRecipients</mca:CSharpReference>
            </OutArgument>
          </p1:BuildCollection.Result>
          <p1:BuildCollection.Values>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">pocEmail</mca:CSharpValue>
            </InArgument>
          </p1:BuildCollection.Values>
        </p1:BuildCollection>
        <p:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}" CC="{x:Null}" Body="RFI was created for your viewing pleasure" Subject="RFI Created">
          <p:Email.To>
            <InArgument x:TypeArguments="sco:Collection(x:String)">
              <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">emailRecipients</mca:CSharpValue>
            </InArgument>
          </p:Email.To>
        </p:Email>
      </Sequence>
      <sads:DebugSymbol.Symbol>d29jOlxTUDIwMTNcRXhlcmNpc2VUZW1wbGF0ZUJ1c2luZXNzUnVsZXNcRXhlcmNpc2VUZW1wbGF0ZUJ1c2luZXNzUnVsZXNcV29ya2Zsb3dzXEVtYWlsT25SZmlDcmVhdGVkXFdvcmtmbG93LnhhbWwVLQN7DgIBATMFYBACARNhBXgQAgECNAdJHAIBIkoHVh8CARlXB14aAgEUYgduHAIBCm8HdhECAQM+DUArAgEoRQ1FbAIBJDcNOSsCASNNDU1kAgEeUg1SWwIBGloNWngCARVqDWpTAgEPZQ1lcgIBC3INcmoCAQZvT296AgEFb4MBb5ABAgEEPw8/JQMBKAE4DzglAwEjAQ==</sads:DebugSymbol.Symbol>
    </Sequence>
  </ewe:Workflow.Implementation>
</ewe:Workflow>